(()=>{"use strict";var e={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},t=document.getElementById("open_popup"),n=(document.querySelector(".profile__image"),document.querySelector(".profile__info-name"),document.querySelector(".profile__info-description"),document.querySelector(".profile__image-container")),r=document.querySelector(".profile__button-add"),o=document.querySelector(".popup__input_name"),i=document.querySelector(".popup__input_description"),a=(document.querySelector(".popup__input-avatar"),document.querySelector(".popup_edit-profile")),c=document.querySelector(".popup_edit-avatar"),u=document.querySelector(".popup_add-card");function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}document.querySelector(".popup_delete-card"),document.querySelector(".element__delete");var s=function(){function e(t,n){var r=t.name,o=t.link,i=t.likes,a=void 0===i?[]:i,c=t._id,u=t.owner,l=void 0===u?{}:u,s=t.userId,f=t.handleCardClick,p=t.deleteCard,d=t.likeCardHandler;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=r,this._link=o,this._likesList=a,this._cardId=c,this._ownerId=l._id,this._currentUserId=s,this._handleCardClick=f,this._deleteCard=p,this._likeCardHandler=d,this._templateSelector=n}var t,n;return t=e,(n=[{key:"_checkCardOwner",value:function(){this._ownerId!==this._currentUserId&&this._deleteButton.remove()}},{key:"_isCardLiked",value:function(){var e=this;return this._likesList.find((function(t){return t._id===e._currentUserId}))}},{key:"_showLikesAmount",value:function(e){this._showLikesAmount.textContent=e.length}},{key:"renderLikes",value:function(e){this.setLikes(e),this._showLikesAmount(this._likesList),this._isCardLiked()?this._likeButton.classList.add("like_active"):this._likeButton.classList.remove("like_active")}},{key:"getId",value:function(){return this._cardId}},{key:"getLikes",value:function(){return this._likesList}},{key:"setLikes",value:function(e){this._likesList=e}},{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".element__main-like"),this._deleteButton=this._element.querySelector(".element__delete"),this._elementImage=this._element.querySelector(".element__image"),this._elementTitle=this._element.querySelector(".element__main-name"),this._likesAmount=this._element.querySelector(".element__main-likes"),this._elementImage.src=this._link,this._elementImage.alt=this._name,this._elementTitle.textContent=this._name,this._checkCardOwner(),this.renderLikes(this._likesList),this._setEventListeners(),this._element}},{key:"_toggleLike",value:function(){this._likeButton.classList.toggle("like_active")}},{key:"deleteCard",value:function(){this._element.remove(),this._element=null}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){return e._likeCardHandler()})),this._deleteButton.addEventListener("click",(function(){return e._deleteCard(e._cardId)})),this._elementImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var p=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=n,this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector))}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){if(e.validity.valid)this._hideInputError(e);else{var t=e.validationMessage;this._showInputError(e,t)}}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"disableSubmitButton",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}},{key:"_enableSubmitButton",value:function(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this.disableSubmitButton():this._enableSubmitButton()}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"resetErrors",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var h=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var y=function(){function e(t){var n=t.nameSelector,r=t.descriptionSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._description=document.querySelector(r),this._avatar=document.querySelector(o),this._id=""}var t,n;return t=e,(n=[{key:"getUserId",value:function(){return this._id}},{key:"getUserInfo",value:function(){return{name:this._name.textContent,description:this._description.textContent,avatar:this._avatar.src}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e.avatar,o=e._id;this._name.textContent=t,this._description.textContent=n,this._avatar.src="url(".concat(r,")"),this._id=o}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var v=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_active"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_active"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handleOverlayClose",value:function(e){e.target===e.currentTarget&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupCloseButton=this._popup.querySelector(".popup__close-icon"),this._popupCloseButton.addEventListener("click",(function(){e.close()})),this._popup.addEventListener("mousedown",(function(t){e._handleOverlayClose(t)}))}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=S(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},g.apply(this,arguments)}function S(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}function w(e,t){return w=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},w(e,t)}function E(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&w(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(r);if(o){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._handleFormSubmit=r,t._form=t._popup.querySelector(".popup__form"),t._buttonPopupSubmit=t._form.querySelector(".popup__button"),t._inputList=t._form.querySelectorAll(".popup__input"),t}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formList={},this._inputList.forEach((function(t){e._formList[t.name]=t.value})),this._formList}},{key:"setEventListeners",value:function(){var e=this;g(C(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"loadingState",value:function(e){this._buttonPopupSubmit.textContent=e?"Сохраняю...":"Сохранить"}},{key:"close",value:function(){g(C(a.prototype),"close",this).call(this),this._form.reset()}}])&&k(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(v);function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function P(){return P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=I(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},P.apply(this,arguments)}function I(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=R(e)););return e}function B(e,t){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},B(e,t)}function q(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function R(e){return R=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},R(e)}var T=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&B(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=R(r);if(o){var n=R(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return q(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._image=t._popup.querySelector(".popup__image"),t._descriptionImage=t._popup.querySelector(".popup__description"),t}return t=a,(n=[{key:"open",value:function(e,t){P(R(a.prototype),"open",this).call(this),this._image.src=t,this._image.alt=e,this._descriptionImage.textContent=e}}])&&j(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(v);function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var A=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"_checkRes",value:function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{method:"GET",headers:this._headers}).then(this._checkRes)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{method:"GET",headers:this._headers}).then(this._checkRes)}},{key:"editProfileInfo",value:function(e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.description})}).then(this._checkRes)}},{key:"addNewElementCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.elementTitle,link:e.elementLink})}).then(this._checkRes)}},{key:"deleteElementCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkRes)}},{key:"setLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._checkRes)}},{key:"removeLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._checkRes)}},{key:"editAvatar",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkRes)}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function x(e){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},x(e)}function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function V(){return V="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=F(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},V.apply(this,arguments)}function F(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=J(e)););return e}function H(e,t){return H=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},H(e,t)}function N(e,t){if(t&&("object"===x(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function J(e){return J=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},J(e)}var G=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&H(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=J(r);if(o){var n=J(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return N(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._popupButton=t._popup.querySelector(".popup__button"),t}return t=a,(n=[{key:"setConfirmAction",value:function(e){this._confirmDeleteCallback=e}},{key:"setEventListeners",value:function(){var e=this;V(J(a.prototype),"setEventListeners",this).call(this),this._popupButton.addEventListener("click",(function(){e._confirmDeleteCallback()}))}},{key:"loadingState",value:function(e){this._popupButton.textContent=e?"Удаление...":"Да"}}])&&D(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(v);function M(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var z=new A({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-54",headers:{authorization:"f4235ef4-85b7-4215-be28-8acef2d83ac1","Content-Type":"application/json"}}),$=new O({popupSelector:".popup_edit-profile",handleFormSubmit:function(e){var t=e.name,n=e.description;$.loadingState(!0),z.editProfileInfo({name:t,description:n}).then((function(e){K.setUserInfo(e),$.close()})).catch((function(e){console.log("Ошибка ".concat(e))})).finally((function(){$.loadingState(!1)}))}});$.setEventListeners();var K=new y({nameSelector:".profile__info-name",descriptionSelector:".profile__info-description",avatarSelector:".profile__image"}),Q=new O({popupSelector:".popup_edit-avatar",handleFormSubmit:function(e){var t=e.avatar;Q.loadingState(!0),z.editAvatar(t).then((function(e){K.setUserInfo(e),Q.closePopup()})).catch((function(e){console.log("Ошибка ".concat(e))})).finally((function(){Q.loadingState(!1)}))}});Q.setEventListeners();var W=new O({popupSelector:".popup_add-card",handleFormSubmit:function(e){var t=e.elementTitle,n=e.elementLink;W.loadingState(!0),z.addNewElementCard({elementTitle:t,elementLink:n}).then((function(e){ee.addItem(Z(e)),W.close()})).catch((function(e){console.log("Ошибка ".concat(e))})).finally((function(){W.loadingState(!1)}))}});W.setEventListeners();var X=new G(".popup_delete-card"),Y=new T(".popup_card");Y.setEventListeners();var Z=function(e){var t=e.name,n=e.link,r=e.likes,o=e._id,i=e.owner,a=new s({name:t,link:n,likes:r,_id:o,owner:i,userId:K.getUserId(),handleCardClick:function(e,t){Y.open(e,t)},deleteCard:function(e){X.open(),X.setConfirmAction((function(){X.loadingState(!0),z.deleteElementCard(e).then((function(){a.cardDelete(),X.close()})).catch((function(e){console.log("Ошибка ".concat(e))})).finally((function(){X.loadingState(!1)}))}))},likeCardHandler:function(){var e=a.getLikes().find((function(e){return e._id===K._id}));e?z.removeLike(a.getId()).then((function(e){a.renderLikes(e.likes)})).catch((function(e){console.log("Ошибка ".concat(e))})):z.setLike(a.getId()).then((function(e){a.renderLikes(e.likes)})).catch((function(e){console.log("Ошибка ".concat(e))}))}},"#template");return a.generateCard()},ee=new h({renderer:function(e){ee.addItem(Z(e))}},".elements");Promise.all([z.getUserInfo(),z.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return M(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?M(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];o._id,K.setUserInfo(o),ee.renderItems(i)})).catch((function(e){console.log("Ошибка сука".concat(e))})),t.addEventListener("click",(function(){var e=K.getUserInfo();o.value=e.name,i.value=e.description,$.open(),te.resetErrors(),te.disableSubmitButton()})),n.addEventListener("click",(function(){Q.open(),ne.resetErrors(),ne.disableSubmitButton()})),r.addEventListener("click",(function(){W.open(),re.resetErrors(),re.disableSubmitButton()}));var te=new p(e,a);te.enableValidation();var ne=new p(e,c);ne.enableValidation();var re=new p(e,u);re.enableValidation(),document.addEventListener("click",(function(e){console.log(e.target)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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TixTQUFTd0QsaUJBQWlCLFNBQVMsU0FBVXlKLEdBQzNDeEMsUUFBUUMsSUFBSXVDLEVBQUU5RixPQUNoQixHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9wYWdlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdmFsaWRhdGlvbkNvbmZpZyA9ICh7XHJcbiAgICBmb3JtU2VsZWN0b3I6ICcucG9wdXBfX2Zvcm0nLFxyXG4gICAgaW5wdXRTZWxlY3RvcjogJy5wb3B1cF9faW5wdXQnLFxyXG4gICAgc3VibWl0QnV0dG9uU2VsZWN0b3I6ICcucG9wdXBfX2J1dHRvbicsXHJcbiAgICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiAncG9wdXBfX2J1dHRvbl9kaXNhYmxlZCcsXHJcbiAgICBpbnB1dEVycm9yQ2xhc3M6ICdwb3B1cF9faW5wdXRfdHlwZV9lcnJvcicsXHJcbiAgICBlcnJvckNsYXNzOiAncG9wdXBfX2Vycm9yX3Zpc2libGUnXHJcbn0pOyBcclxuXHJcbmV4cG9ydCBjb25zdCBhcGlDb25maWcgPSB7XHJcbiAgYmFzZVVybDogXCJodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTU0XCIsIC8v0L/QtdGA0LXQtNC10LvQsNGC0Ywg0L3QsNC30LLQsNC90LjQtSDRgdGB0YvQu9C60LhcclxuICBoZWFkZXJzOiB7XHJcbiAgICBhdXRob3JpemF0aW9uOiBcImY0MjM1ZWY0LTg1YjctNDIxNS1iZTI4LThhY2VmMmQ4M2FjMVwiLFxyXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgYnV0dG9uUHJvZmlsZVBvcHVwT3BlbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdvcGVuX3BvcHVwJyk7XHJcbmV4cG9ydCBjb25zdCBhdmF0YXJJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19pbWFnZScpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9faW5mby1uYW1lJyk7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlRGVzY3JpcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9faW5mby1kZXNjcmlwdGlvbicpO1xyXG5leHBvcnQgY29uc3QgYnV0dG9uQXZhdGFyUG9wdXBPcGVuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2ltYWdlLWNvbnRhaW5lcicpO1xyXG5leHBvcnQgY29uc3QgYnV0dG9uQWRkQ2FyZFBvcHVwT3BlbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19idXR0b24tYWRkJyk7XHJcbmV4cG9ydCBjb25zdCBuYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X25hbWUnKTtcclxuZXhwb3J0IGNvbnN0IGRlc2NyaXB0aW9uSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X2Rlc2NyaXB0aW9uJyk7XHJcbmV4cG9ydCBjb25zdCBhdmF0YXJJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXQtYXZhdGFyJyk7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlUG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfZWRpdC1wcm9maWxlJyk7XHJcbmV4cG9ydCBjb25zdCBhdmF0YXJQb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9lZGl0LWF2YXRhcicpO1xyXG5leHBvcnQgY29uc3QgbmV3Q2FyZFBvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX2FkZC1jYXJkJyk7XHJcbmV4cG9ydCBjb25zdCBwb3B1cERlbGV0ZUNhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfZGVsZXRlLWNhcmQnKVxyXG5leHBvcnQgY29uc3QgYnV0dG9uQ2FyZERlbGV0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19kZWxldGUnKVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJkIHtcclxuICAgIGNvbnN0cnVjdG9yKHsgbmFtZSwgbGluaywgbGlrZXMgPSBbXSwgX2lkLCBvd25lciA9IHt9LCB1c2VySWQsIGhhbmRsZUNhcmRDbGljaywgZGVsZXRlQ2FyZCwgbGlrZUNhcmRIYW5kbGVyIH0sIHRlbXBsYXRlU2VsZWN0b3IpIHtcclxuICAgICAgICB0aGlzLl9uYW1lID0gbmFtZTtcclxuICAgICAgICB0aGlzLl9saW5rID0gbGluaztcclxuICAgICAgICB0aGlzLl9saWtlc0xpc3QgPSBsaWtlczsgLy8g0LjQt9C80LXQvdC40YLRjFxyXG4gICAgICAgIHRoaXMuX2NhcmRJZCA9IF9pZDtcclxuICAgICAgICB0aGlzLl9vd25lcklkID0gb3duZXIuX2lkO1xyXG4gICAgICAgIHRoaXMuX2N1cnJlbnRVc2VySWQgPSB1c2VySWQ7XHJcblxyXG4gICAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcclxuICAgICAgICB0aGlzLl9kZWxldGVDYXJkID0gZGVsZXRlQ2FyZDtcclxuICAgICAgICB0aGlzLl9saWtlQ2FyZEhhbmRsZXIgPSBsaWtlQ2FyZEhhbmRsZXI7XHJcblxyXG4gICAgICAgIHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IgPSB0ZW1wbGF0ZVNlbGVjdG9yO1xyXG4gICAgfVxyXG5cclxuICAgIF9jaGVja0NhcmRPd25lcigpIHtcclxuICAgICAgICBpZiAodGhpcy5fb3duZXJJZCAhPT0gdGhpcy5fY3VycmVudFVzZXJJZCkge1xyXG4gICAgICAgICAgICB0aGlzLl9kZWxldGVCdXR0b24ucmVtb3ZlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIF9pc0NhcmRMaWtlZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbGlrZXNMaXN0XHJcbiAgICAgICAgLmZpbmQob3duZXIgPT4gb3duZXIuX2lkID09PSB0aGlzLl9jdXJyZW50VXNlcklkKTtcclxuICAgIH1cclxuXHJcbiAgICBfc2hvd0xpa2VzQW1vdW50KGxpa2VzKSB7XHJcbiAgICAgICAgdGhpcy5fc2hvd0xpa2VzQW1vdW50LnRleHRDb250ZW50ID0gbGlrZXMubGVuZ3RoO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlckxpa2VzKGxpa2VzKSB7XHJcbiAgICAgICAgdGhpcy5zZXRMaWtlcyhsaWtlcyk7XHJcbiAgICAgICAgdGhpcy5fc2hvd0xpa2VzQW1vdW50KHRoaXMuX2xpa2VzTGlzdCk7XHJcbiAgICAgICAgaWYgKHRoaXMuX2lzQ2FyZExpa2VkKCkpIHtcclxuICAgICAgICAgICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdsaWtlX2FjdGl2ZScpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnbGlrZV9hY3RpdmUnKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0SWQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NhcmRJZDtcclxuICAgIH1cclxuXHJcbiAgICBnZXRMaWtlcygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbGlrZXNMaXN0O1xyXG4gICAgfVxyXG5cclxuICAgIHNldExpa2VzKGxpa2VzKSB7XHJcbiAgICAgICAgdGhpcy5fbGlrZXNMaXN0ID0gbGlrZXM7XHJcbiAgICB9XHJcblxyXG4gICAgLy/QsdC10YDQtdC8INGI0LDQsdC70L7QvVxyXG4gICAgX2dldFRlbXBsYXRlKCkge1xyXG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudFxyXG4gICAgICAgICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl90ZW1wbGF0ZVNlbGVjdG9yKVxyXG4gICAgICAgICAgICAuY29udGVudFxyXG4gICAgICAgICAgICAucXVlcnlTZWxlY3RvcignLmVsZW1lbnQnKVxyXG4gICAgICAgICAgICAuY2xvbmVOb2RlKHRydWUpO1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgLy/Qs9C10L3QtdGA0LDRhtC40Y8g0LrQsNGA0YLQvtGH0LrQuFxyXG4gICAgZ2VuZXJhdGVDYXJkKCkge1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xyXG4gICAgICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19tYWluLWxpa2UnKTtcclxuICAgICAgICB0aGlzLl9kZWxldGVCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19kZWxldGUnKTtcclxuICAgICAgICB0aGlzLl9lbGVtZW50SW1hZ2UgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19pbWFnZScpO1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnRUaXRsZSA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX21haW4tbmFtZScpO1xyXG4gICAgICAgIHRoaXMuX2xpa2VzQW1vdW50ID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbWFpbi1saWtlcycpXHJcblxyXG4gICAgICAgIHRoaXMuX2VsZW1lbnRJbWFnZS5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnRJbWFnZS5hbHQgPSB0aGlzLl9uYW1lO1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnRUaXRsZS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XHJcblxyXG4gICAgICAgIHRoaXMuX2NoZWNrQ2FyZE93bmVyKClcclxuICAgICAgICB0aGlzLnJlbmRlckxpa2VzKHRoaXMuX2xpa2VzTGlzdClcclxuICAgICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuICAgICAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcclxuICAgIH1cclxuXHJcbiAgICAvL9C/0LXRgNC10LrQu9GO0YfQtdC90LjQtSDQu9Cw0LnQutCwXHJcbiAgICBfdG9nZ2xlTGlrZSgpIHtcclxuICAgICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoJ2xpa2VfYWN0aXZlJyk7XHJcbiAgICB9XHJcblxyXG4gICAgLy/Rg9C00LDQu9C10L3QuNC1INC60LDRgNGC0L7Rh9C60LhcclxuICAgIGRlbGV0ZUNhcmQoKSB7XHJcbiAgICAgICAgdGhpcy5fZWxlbWVudC5yZW1vdmUoKTtcclxuICAgICAgICB0aGlzLl9lbGVtZW50ID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICAvL9GD0YHRgtCw0L3QvtCy0LjRgtGMINGB0LvRg9GI0LDRgtC10LvQuFxyXG4gICAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICAgIHRoaXMuX2xpa2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLl9saWtlQ2FyZEhhbmRsZXIoKSk7XHJcbiAgICAgICAgdGhpcy5fZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5fZGVsZXRlQ2FyZCh0aGlzLl9jYXJkSWQpKTtcclxuICAgICAgICB0aGlzLl9lbGVtZW50SW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayh0aGlzLl9uYW1lLCB0aGlzLl9saW5rKVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn07IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgICBjb25zdHJ1Y3RvcihjbGFzc2VzLCBmb3JtRWxlbWVudCkge1xyXG4gICAgICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSBjbGFzc2VzLmlucHV0U2VsZWN0b3I7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBjbGFzc2VzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xyXG4gICAgICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSBjbGFzc2VzLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICAgICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gY2xhc3Nlcy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICAgICAgdGhpcy5fZXJyb3JDbGFzcyA9IGNsYXNzZXMuZXJyb3JDbGFzcztcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50OyBcclxuICAgICAgICB0aGlzLl9idXR0b25FbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgICAgICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbSh0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpKTtcclxuICAgIH1cclxuXHJcbiAgICAvL9C/0L7QutCw0LfQsNGC0Ywg0L7RiNC40LHQutGDXHJcbiAgICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpICB7XHJcbiAgICAgICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgICAgIC8vY29uc29sZS5sb2coZXJyb3JFbGVtZW50KTtcclxuICAgICAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcclxuICAgICAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcclxuICAgIH07XHJcblxyXG4gICAgLy/RgdC60YDRi9GC0YxcclxuICAgIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgICAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgICAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcclxuICAgICAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSAnJztcclxuICAgIH07XHJcblxyXG4gICAgLy/Qv9GA0L7QstC10YDQv9C40YLRjCDQstCw0LvQuNC00L3QvtGB0YLRjFxyXG4gICAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpICB7XHJcbiAgICAgICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZTtcclxuICAgICAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgZXJyb3JNZXNzYWdlKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIC8v0L/RgNC+0LLQtdGA0LjRgtGMINC90LDQu9C40YfQuNC1INC90LXQstCw0LvQuNC00L3Ri9GFINC/0L7Qu9C10LlcclxuICAgIF9oYXNJbnZhbGlkSW5wdXQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgICAgIHJldHVybiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICAvL9C60L3QvtC/0LrQsCDQvdC10LDQutGC0LjQstC90LBcclxuICAgIGRpc2FibGVTdWJtaXRCdXR0b24oKSB7XHJcbiAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgfTtcclxuXHJcbiAgICAvL9C60L3QvtC/0LrQsCDQsNC60YLQuNCy0L3QsFxyXG4gICAgX2VuYWJsZVN1Ym1pdEJ1dHRvbigpIHtcclxuICAgICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgfTsgXHJcbiAgICBcclxuICAgIC8v0L/QtdGA0LXQutC70Y7Rh9C10L3QuNC1INC60L3QvtC/0LrQuFxyXG4gICAgX3RvZ2dsZUJ1dHRvblN0YXRlKCkge1xyXG4gICAgICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xyXG4gICAgICAgICAgICB0aGlzLmRpc2FibGVTdWJtaXRCdXR0b24oKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9lbmFibGVTdWJtaXRCdXR0b24oKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy/Rg9GB0YLQsNC90L7QstC40YLRjCDRgdC70YPRiNCw0YLQtdC70LhcclxuICAgIF9zZXRFdmVudExpc3RlbmVycyAoKSB7XHJcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKVxyXG5cclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpXHJcbiAgICAgICAgICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvL9GB0LHRgNC+0YHQuNGC0Ywg0L7RiNC40LHQutC4XHJcbiAgICByZXNldEVycm9ycygpIHtcclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xyXG4gICAgY29uc3RydWN0b3IoeyByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xyXG4gICAgICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICAgICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXJTZWxlY3Rvcik7XHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVySXRlbXMoaXRlbXMpe1xyXG4gICAgICAgIGl0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkSXRlbShlbGVtZW50KSB7XHJcbiAgICAgICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudCk7XHJcbiAgICB9XHJcbn07IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xyXG4gICAgY29uc3RydWN0b3IoeyBuYW1lU2VsZWN0b3IsIGRlc2NyaXB0aW9uU2VsZWN0b3IsIGF2YXRhclNlbGVjdG9yIH0pIHtcclxuICAgICAgICB0aGlzLl9uYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX2Rlc2NyaXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihkZXNjcmlwdGlvblNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9hdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGF2YXRhclNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9pZCA9ICcnO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFVzZXJJZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5faWQ7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbmFtZTogdGhpcy5fbmFtZS50ZXh0Q29udGVudCxcclxuICAgICAgICAgICAgZGVzY3JpcHRpb246IHRoaXMuX2Rlc2NyaXB0aW9uLnRleHRDb250ZW50LFxyXG4gICAgICAgICAgICBhdmF0YXI6IHRoaXMuX2F2YXRhci5zcmNcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIHNldFVzZXJJbmZvKHsgbmFtZSwgYWJvdXQsIGF2YXRhciwgX2lkIH0pIHtcclxuICAgICAgICB0aGlzLl9uYW1lLnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgICAgICB0aGlzLl9kZXNjcmlwdGlvbi50ZXh0Q29udGVudCA9IGFib3V0O1xyXG4gICAgICAgIHRoaXMuX2F2YXRhci5zcmMgPSBgdXJsKCR7YXZhdGFyfSlgO1xyXG4gICAgICAgIHRoaXMuX2lkID0gX2lkO1xyXG4gICAgfVxyXG59OyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UgPSB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBvcGVuKCkge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoJ3BvcHVwX2FjdGl2ZScpO1xyXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgICB9XHJcblxyXG4gICAgY2xvc2UoKSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXBfYWN0aXZlJyk7XHJcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICAgIH1cclxuXHJcbiAgICBfaGFuZGxlRXNjQ2xvc2UoZXZ0KSB7XHJcbiAgICAgICAgaWYgKGV2dC5rZXkgPT09ICdFc2NhcGUnKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIF9oYW5kbGVPdmVybGF5Q2xvc2UoZXZ0KSB7XHJcbiAgICAgICAgaWYgKGV2dC50YXJnZXQgPT09IGV2dC5jdXJyZW50VGFyZ2V0KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBDbG9zZUJ1dHRvbiA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fY2xvc2UtaWNvbicpO1xyXG5cclxuICAgICAgICB0aGlzLl9wb3B1cENsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5fcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgKGV2dCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9oYW5kbGVPdmVybGF5Q2xvc2UoZXZ0KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufTsiLCJpbXBvcnQgUG9wdXAgZnJvbSAnLi9Qb3B1cC5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXB7XHJcbiAgICBjb25zdHJ1Y3RvciAoeyBwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0IH0pIHtcclxuICAgICAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuXHJcbiAgICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XHJcblxyXG4gICAgICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKTsgXHJcbiAgICAgICAgdGhpcy5fYnV0dG9uUG9wdXBTdWJtaXQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fYnV0dG9uJyk7XHJcbiAgICAgICAgdGhpcy5faW5wdXRMaXN0ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCcucG9wdXBfX2lucHV0Jyk7XHJcbiAgICB9XHJcblxyXG4gICAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgICAgIHRoaXMuX2Zvcm1MaXN0ID0ge307XHJcbiAgICAgICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2Zvcm1MaXN0W2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzLl9mb3JtTGlzdDtcclxuICAgIH1cclxuXHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpe1xyXG4gICAgICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4gICAgICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2dCkgPT4ge1xyXG4gICAgICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBsb2FkaW5nU3RhdGUoaXNMb2FkaW5nKSB7XHJcbiAgICAgICAgaWYgKGlzTG9hZGluZykge1xyXG4gICAgICAgICAgICB0aGlzLl9idXR0b25Qb3B1cFN1Ym1pdC50ZXh0Q29udGVudCA9ICfQodC+0YXRgNCw0L3Rj9GOLi4uJztcclxuICAgICAgICB9IFxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9idXR0b25Qb3B1cFN1Ym1pdC50ZXh0Q29udGVudCA9ICfQodC+0YXRgNCw0L3QuNGC0YwnO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjbG9zZSgpe1xyXG4gICAgICAgIHN1cGVyLmNsb3NlKClcclxuXHJcbiAgICAgICAgdGhpcy5fZm9ybS5yZXNldCgpO1xyXG4gICAgfVxyXG59OyIsImltcG9ydCBQb3B1cCBmcm9tICcuL1BvcHVwLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXB7XHJcbiAgICBjb25zdHJ1Y3RvciAocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG5cclxuICAgICAgICB0aGlzLl9pbWFnZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW1hZ2UnKTtcclxuICAgICAgICB0aGlzLl9kZXNjcmlwdGlvbkltYWdlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19kZXNjcmlwdGlvbicpO1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG5cclxuICAgIG9wZW4obmFtZSwgbGluayl7XHJcbiAgICAgICAgc3VwZXIub3BlbigpXHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpcy5faW1hZ2Uuc3JjID0gbGluaztcclxuICAgICAgICB0aGlzLl9pbWFnZS5hbHQgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMuX2Rlc2NyaXB0aW9uSW1hZ2UudGV4dENvbnRlbnQgPSBuYW1lO1xyXG4gICAgfVxyXG59OyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XHJcbiAgY29uc3RydWN0b3IoeyBiYXNlVXJsLCBoZWFkZXJzIH0pIHtcclxuICAgICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XHJcbiAgICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzO1xyXG4gIH1cclxuXHJcbiAgX2NoZWNrUmVzKHJlcykge1xyXG4gICAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LAgJHtyZXMuc3RhdHVzfWApO1xyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgICAgIG1ldGhvZDogJ0dFVCcsXHJcbiAgICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICB9KVxyXG4gICAgICAudGhlbih0aGlzLl9jaGVja1JlcylcclxuICB9XHJcblxyXG4gIGdldEluaXRpYWxDYXJkcygpIHtcclxuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xyXG4gICAgICAgICAgbWV0aG9kOiAnR0VUJyxcclxuICAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIH0pXHJcbiAgICAgIC50aGVuKHRoaXMuX2NoZWNrUmVzKVxyXG4gIH1cclxuXHJcbiAgZWRpdFByb2ZpbGVJbmZvKGluZm8pIHtcclxuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxyXG4gICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgICAgICBuYW1lOiBpbmZvLm5hbWUsXHJcbiAgICAgICAgICAgICAgYWJvdXQ6IGluZm8uZGVzY3JpcHRpb25cclxuICAgICAgICAgIH0pXHJcbiAgICAgIH0pXHJcbiAgICAgIC50aGVuKHRoaXMuX2NoZWNrUmVzKVxyXG4gIH1cclxuXHJcbiAgYWRkTmV3RWxlbWVudENhcmQoY2FyZERhdGEpIHtcclxuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xyXG4gICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICAgIG5hbWU6IGNhcmREYXRhLmVsZW1lbnRUaXRsZSxcclxuICAgICAgICAgICAgICBsaW5rOiBjYXJkRGF0YS5lbGVtZW50TGlua1xyXG4gICAgICAgICAgfSlcclxuICAgICAgfSlcclxuICAgICAgLnRoZW4odGhpcy5fY2hlY2tSZXMpXHJcbiAgfVxyXG5cclxuICBkZWxldGVFbGVtZW50Q2FyZChpZCkge1xyXG4gICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtpZH1gLCB7XHJcbiAgICAgICAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4gICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgfSlcclxuICAgICAgLnRoZW4odGhpcy5fY2hlY2tSZXMpXHJcbiAgfVxyXG5cclxuICBzZXRMaWtlKGlkKSB7XHJcbiAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2lkfS9saWtlc2AsIHtcclxuICAgICAgICAgIG1ldGhvZDogJ1BVVCcsXHJcbiAgICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICB9KVxyXG4gICAgICAudGhlbih0aGlzLl9jaGVja1JlcylcclxuICB9XHJcblxyXG4gIHJlbW92ZUxpa2UoaWQpIHtcclxuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7aWR9L2xpa2VzYCwge1xyXG4gICAgICAgICAgbWV0aG9kOiAnREVMRVRFJyxcclxuICAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIH0pXHJcbiAgICAgIC50aGVuKHRoaXMuX2NoZWNrUmVzKVxyXG4gIH1cclxuXHJcbiAgZWRpdEF2YXRhcihhdmF0YXIpIHtcclxuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcclxuICAgICAgICAgIG1ldGhvZDogJ1BBVENIJyxcclxuICAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgICAgYXZhdGFyOiBhdmF0YXIsXHJcbiAgICAgICAgICB9KVxyXG4gICAgICB9KVxyXG4gICAgICAudGhlbih0aGlzLl9jaGVja1JlcylcclxuICB9XHJcbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSAnLi9Qb3B1cC5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhDb25maXJtYXRpb24gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3RvciAocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwQnV0dG9uID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19idXR0b24nKVxyXG4gICAgfVxyXG5cclxuICAgIHNldENvbmZpcm1BY3Rpb24oY2FsbGJhY2spIHtcclxuICAgICAgICB0aGlzLl9jb25maXJtRGVsZXRlQ2FsbGJhY2sgPSBjYWxsYmFjaztcclxuICAgIH1cclxuXHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9jb25maXJtRGVsZXRlQ2FsbGJhY2soKVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgbG9hZGluZ1N0YXRlKGlzTG9hZGluZykge1xyXG4gICAgICAgIGlmIChpc0xvYWRpbmcpIHtcclxuICAgICAgICAgICAgdGhpcy5fcG9wdXBCdXR0b24udGV4dENvbnRlbnQgPSAn0KPQtNCw0LvQtdC90LjQtS4uLidcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9wb3B1cEJ1dHRvbi50ZXh0Q29udGVudCA9ICfQlNCwJztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyB2YWxpZGF0aW9uQ29uZmlnLCBhdmF0YXJJbWFnZSwgcHJvZmlsZU5hbWUsIHByb2ZpbGVEZXNjcmlwdGlvbiwgYnV0dG9uUHJvZmlsZVBvcHVwT3BlbiwgYnV0dG9uQXZhdGFyUG9wdXBPcGVuLCBidXR0b25BZGRDYXJkUG9wdXBPcGVuLCBuYW1lSW5wdXQsIGRlc2NyaXB0aW9uSW5wdXQsIHByb2ZpbGVQb3B1cCwgYXZhdGFyUG9wdXAsIG5ld0NhcmRQb3B1cCwgYXBpQ29uZmlnLCBidXR0b25DYXJkRGVsZXRlfSBmcm9tICcuLi91dGlscy9jb25zdGFudHMuanMnO1xyXG5pbXBvcnQgQ2FyZCBmcm9tICcuLi9jb21wb25lbnRzL0NhcmQuanMnO1xyXG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tICcuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMnO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tICcuLi9jb21wb25lbnRzL1NlY3Rpb24nO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSAnLi4vY29tcG9uZW50cy9Vc2VySW5mbyc7XHJcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyc7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzJztcclxuaW1wb3J0IEFwaSBmcm9tICcuLi9jb21wb25lbnRzL0FwaS5qcyc7XHJcbmltcG9ydCAnLi9pbmRleC5jc3MnO1xyXG5pbXBvcnQgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybWF0aW9uLmpzJztcclxuXHJcbmNvbnN0IGFwaSA9IG5ldyBBcGkoYXBpQ29uZmlnKTtcclxuXHJcbmxldCBjdXJyZW50VXNlcklkID0gbnVsbDtcclxuXHJcbi8v0L/QvtC/0LDQvyDRgNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNGPINC/0YDQvtGE0LjQu9GPXHJcbmNvbnN0IHBvcHVwRWRpdFByb2ZpbGUgPSBuZXcgUG9wdXBXaXRoRm9ybSh7IFxyXG4gIHBvcHVwU2VsZWN0b3I6ICcucG9wdXBfZWRpdC1wcm9maWxlJyxcclxuICBoYW5kbGVGb3JtU3VibWl0OiAoeyBuYW1lLCBkZXNjcmlwdGlvbiB9KSA9PiB7XHJcbiAgICBwb3B1cEVkaXRQcm9maWxlLmxvYWRpbmdTdGF0ZSh0cnVlKTtcclxuICAgIGFwaS5lZGl0UHJvZmlsZUluZm8oeyBuYW1lLCBkZXNjcmlwdGlvbiB9KVxyXG4gICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgdXNlclBhcmFtZXRlcnMuc2V0VXNlckluZm8ocmVzKTtcclxuICAgICAgICBwb3B1cEVkaXRQcm9maWxlLmNsb3NlKClcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwICR7ZXJyfWApO1xyXG4gICAgICB9KVxyXG4gICAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgICAgcG9wdXBFZGl0UHJvZmlsZS5sb2FkaW5nU3RhdGUoZmFsc2UpO1xyXG4gICAgICB9KTtcclxuICAgfVxyXG4gfSk7XHJcbiBwb3B1cEVkaXRQcm9maWxlLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4gY29uc3QgdXNlclBhcmFtZXRlcnMgPSBuZXcgVXNlckluZm8gKHtcclxuICBuYW1lU2VsZWN0b3I6ICcucHJvZmlsZV9faW5mby1uYW1lJyxcclxuICBkZXNjcmlwdGlvblNlbGVjdG9yOiAnLnByb2ZpbGVfX2luZm8tZGVzY3JpcHRpb24nLFxyXG4gIGF2YXRhclNlbGVjdG9yOiAnLnByb2ZpbGVfX2ltYWdlJ1xyXG59KTtcclxuXHJcbi8v0YTRg9C90LrRhtC40Y8g0L7RgtC60YDRi9GC0LjRjyDQv9C+0L/QsNC/0LAg0L/RgNC+0YTQuNC70Y9cclxuZnVuY3Rpb24gb3BlblBvcHVwUHJvZmlsZSgpIHtcclxuICBjb25zdCBwcm9maWxlRm9ybSA9IHVzZXJQYXJhbWV0ZXJzLmdldFVzZXJJbmZvKCk7XHJcbiAgbmFtZUlucHV0LnZhbHVlID0gcHJvZmlsZUZvcm0ubmFtZTtcclxuICBkZXNjcmlwdGlvbklucHV0LnZhbHVlID0gcHJvZmlsZUZvcm0uZGVzY3JpcHRpb247XHJcbiAgcG9wdXBFZGl0UHJvZmlsZS5vcGVuKCk7XHJcbiAgcG9wdXBQcm9maWxlVmFsaWRhdGlvbi5yZXNldEVycm9ycygpO1xyXG4gIHBvcHVwUHJvZmlsZVZhbGlkYXRpb24uZGlzYWJsZVN1Ym1pdEJ1dHRvbigpO1xyXG59O1xyXG5cclxuLy/Qv9C+0L/QsNC/INGA0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40Y8g0LDQstCw0YLQsNGA0LrQuFxyXG5jb25zdCBhdmF0YXJFZGl0UG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XHJcbiAgcG9wdXBTZWxlY3RvcjogJy5wb3B1cF9lZGl0LWF2YXRhcicsXHJcbiAgaGFuZGxlRm9ybVN1Ym1pdDogKHsgYXZhdGFyIH0pID0+IHtcclxuICAgIGF2YXRhckVkaXRQb3B1cC5sb2FkaW5nU3RhdGUodHJ1ZSk7XHJcbiAgICBhcGkuZWRpdEF2YXRhcihhdmF0YXIpXHJcbiAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICB1c2VyUGFyYW1ldGVycy5zZXRVc2VySW5mbyhyZXMpO1xyXG4gICAgICAgIGF2YXRhckVkaXRQb3B1cC5jbG9zZVBvcHVwKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsCAke2Vycn1gKTtcclxuICAgICAgfSlcclxuICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgIGF2YXRhckVkaXRQb3B1cC5sb2FkaW5nU3RhdGUoZmFsc2UpO1xyXG4gICAgICB9KVxyXG4gIH1cclxufSk7XHJcbmF2YXRhckVkaXRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLy/RhNGD0L3QutGG0LjRjyDQvtGC0LrRgNGL0YLQuNGPINC/0L7Qv9Cw0L/QsCDQsNCy0LDRgtCw0YDQsFxyXG5mdW5jdGlvbiBvcGVuQXZhdGFyUG9wdXAoKSB7XHJcbiAgYXZhdGFyRWRpdFBvcHVwLm9wZW4oKTtcclxuICBwb3B1cEF2YXRhclZhbGlkYXRpb24ucmVzZXRFcnJvcnMoKTtcclxuICBwb3B1cEF2YXRhclZhbGlkYXRpb24uZGlzYWJsZVN1Ym1pdEJ1dHRvbigpO1xyXG59XHJcblxyXG4gLy/Qv9C+0L/QsNC/INC00L7QsdCw0LLQu9C10L3QuNGPINC60LDRgNGC0L7Rh9C60LhcclxuY29uc3QgcG9wdXBBZGRDYXJkID0gbmV3IFBvcHVwV2l0aEZvcm0oeyBcclxuICBwb3B1cFNlbGVjdG9yOiAnLnBvcHVwX2FkZC1jYXJkJyxcclxuICBoYW5kbGVGb3JtU3VibWl0OiAoeyBlbGVtZW50VGl0bGUsIGVsZW1lbnRMaW5rIH0pID0+IHtcclxuICAgIHBvcHVwQWRkQ2FyZC5sb2FkaW5nU3RhdGUodHJ1ZSk7XHJcbiAgICBhcGkuYWRkTmV3RWxlbWVudENhcmQoeyBlbGVtZW50VGl0bGUsIGVsZW1lbnRMaW5rIH0pXHJcbiAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICBjYXJkTGlzdC5hZGRJdGVtKGNyZWF0ZUNhcmQocmVzKSk7XHJcbiAgICAgICAgcG9wdXBBZGRDYXJkLmNsb3NlKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsCAke2Vycn1gKTtcclxuICAgICAgfSlcclxuICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgIHBvcHVwQWRkQ2FyZC5sb2FkaW5nU3RhdGUoZmFsc2UpXHJcbiAgICAgIH0pXHJcbiAgfVxyXG59KTtcclxucG9wdXBBZGRDYXJkLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4vL9C/0L7Qv9Cw0L8g0YPQtNCw0LvQtdC90LjRjyDQutCw0YDRgtC+0YfQutC4XHJcbmNvbnN0IHBvcHVwRGVsZXRlQ2FyZCA9IG5ldyBQb3B1cFdpdGhDb25maXJtYXRpb24oJy5wb3B1cF9kZWxldGUtY2FyZCcpXHJcblxyXG4vL9GE0YPQvdC60YbQuNGPINC+0YLQutGA0YvRgtC40Y8g0L/QvtC/0LDQv9CwINC00L7QsdCw0LLQu9C10L3QuNGPINC60LDRgNGC0L7Rh9C60LhcclxuZnVuY3Rpb24gb3Blbk5ld0NhcmRQb3B1cCgpIHtcclxuICBwb3B1cEFkZENhcmQub3BlbigpO1xyXG4gIHBvcHVwQWRkQ2FyZFZhbGlkYXRpb24ucmVzZXRFcnJvcnMoKTtcclxuICBwb3B1cEFkZENhcmRWYWxpZGF0aW9uLmRpc2FibGVTdWJtaXRCdXR0b24oKTtcclxufTtcclxuXHJcbi8v0L7RgtC60YDRi9GC0Ywg0L/QvtC/0LDQvyDRgSDQuNC30L7QsdGA0LDQttC10L3QuNC10LxcclxuY29uc3QgcG9wdXBDYXJkID0gbmV3IFBvcHVwV2l0aEltYWdlKCcucG9wdXBfY2FyZCcpO1xyXG5wb3B1cENhcmQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbi8v0YHQvtC30LTQsNC90LjQtSDQutCw0YDRgtC+0YfQutC4XHJcblxyXG5jb25zdCBjcmVhdGVDYXJkID0gKHsgbmFtZSwgbGluaywgbGlrZXMsIF9pZCwgb3duZXIgfSkgPT4ge1xyXG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZCh7XHJcbiAgICBuYW1lLFxyXG4gICAgbGluayxcclxuICAgIGxpa2VzLFxyXG4gICAgX2lkLFxyXG4gICAgb3duZXIsXHJcbiAgICB1c2VySWQ6IHVzZXJQYXJhbWV0ZXJzLmdldFVzZXJJZCgpLFxyXG4gICAgaGFuZGxlQ2FyZENsaWNrOiAobmFtZSwgbGluaykgPT4ge1xyXG4gICAgICAgIHBvcHVwQ2FyZC5vcGVuKG5hbWUsIGxpbmspO1xyXG4gICAgfSxcclxuXHJcbiAgICBkZWxldGVDYXJkOiAoY2FyZElkKSA9PiB7XHJcbiAgICAgIHBvcHVwRGVsZXRlQ2FyZC5vcGVuKCk7XHJcbiAgICAgIHBvcHVwRGVsZXRlQ2FyZC5zZXRDb25maXJtQWN0aW9uKCgpID0+IHtcclxuICAgICAgICBwb3B1cERlbGV0ZUNhcmQubG9hZGluZ1N0YXRlKHRydWUpO1xyXG4gICAgICAgIGFwaS5kZWxldGVFbGVtZW50Q2FyZChjYXJkSWQpXHJcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgY2FyZC5jYXJkRGVsZXRlKCk7XHJcbiAgICAgICAgICBwb3B1cERlbGV0ZUNhcmQuY2xvc2UoKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwICR7ZXJyfWApO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgICAgcG9wdXBEZWxldGVDYXJkLmxvYWRpbmdTdGF0ZShmYWxzZSk7XHJcbiAgICAgICAgfSlcclxuICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgXHJcblxyXG4gICAgbGlrZUNhcmRIYW5kbGVyOiAoKSA9PiB7XHJcbiAgICAgIGNvbnN0IHN0YXRlTGlrZSA9IGNhcmQuZ2V0TGlrZXMoKVxyXG4gICAgICAuZmluZChvd25lciA9PiBvd25lci5faWQgPT09IHVzZXJQYXJhbWV0ZXJzLl9pZCk7XHJcblxyXG4gICAgICBpZighc3RhdGVMaWtlKSB7XHJcbiAgICAgICAgYXBpLnNldExpa2UoY2FyZC5nZXRJZCgpKVxyXG4gICAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICAgIGNhcmQucmVuZGVyTGlrZXMocmVzLmxpa2VzKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwICR7ZXJyfWApO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGFwaS5yZW1vdmVMaWtlKGNhcmQuZ2V0SWQoKSlcclxuICAgICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgICBjYXJkLnJlbmRlckxpa2VzKHJlcy5saWtlcyk7XHJcbiAgICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwICR7ZXJyfWApO1xyXG4gICAgICB9KTtcclxuICAgICAgfSAgICAgICAgXHJcbiAgICB9LFxyXG4gIH0sICcjdGVtcGxhdGUnKTtcclxuICAgIFxyXG4gICAgcmV0dXJuIGNhcmQuZ2VuZXJhdGVDYXJkKCk7XHJcbn07XHJcblxyXG5cclxuLy/QvtGC0YDQuNGB0L7QstC60LAg0LrQsNGA0YLQvtGH0LXQulxyXG5jb25zdCBjYXJkTGlzdCA9IG5ldyBTZWN0aW9uKHtcclxuICByZW5kZXJlcjogKGluaXRpYWxDYXJkcykgPT4ge1xyXG4gICAgY2FyZExpc3QuYWRkSXRlbShjcmVhdGVDYXJkKGluaXRpYWxDYXJkcykpO1xyXG4gIH1cclxufSwgJy5lbGVtZW50cycpO1xyXG5cclxuLy/Qv9C+0LvRg9GH0LjRgtGMINC40L3RhNC+INC+INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtSDQt9Cw0L/QvtC70L3QuNGC0Ywg0LTQsNC90L3Ri9C1INGBINGB0LXRgNCy0LXRgNCwXHJcblByb21pc2UuYWxsKFthcGkuZ2V0VXNlckluZm8oKSwgYXBpLmdldEluaXRpYWxDYXJkcygpXSlcclxuLnRoZW4oKFt1c2VyRGF0YSwgY2FyZHNdKSA9PiB7XHJcbiAgICBjdXJyZW50VXNlcklkID0gdXNlckRhdGEuX2lkO1xyXG4gICAgdXNlclBhcmFtZXRlcnMuc2V0VXNlckluZm8odXNlckRhdGEpO1xyXG4gICAgY2FyZExpc3QucmVuZGVySXRlbXMoY2FyZHMpO1xyXG59KVxyXG4uY2F0Y2goKGVycikgPT4ge1xyXG4gICAgY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsCDRgdGD0LrQsCR7ZXJyfWApXHJcbn0pO1xyXG5cclxuXHJcbi8v0YHQu9GD0YjQsNGC0LXQu9C4XHJcbmJ1dHRvblByb2ZpbGVQb3B1cE9wZW4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvcGVuUG9wdXBQcm9maWxlKTtcclxuYnV0dG9uQXZhdGFyUG9wdXBPcGVuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgb3BlbkF2YXRhclBvcHVwKTtcclxuYnV0dG9uQWRkQ2FyZFBvcHVwT3Blbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9wZW5OZXdDYXJkUG9wdXApO1xyXG4vL2J1dHRvbkNhcmREZWxldGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvcGVuRGVsZXRlUG9wdXApO1xyXG4gIFxyXG4vL9Cy0LDQu9C40LTQsNGG0LjRjyBcclxuY29uc3QgcG9wdXBQcm9maWxlVmFsaWRhdGlvbiA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25Db25maWcsIHByb2ZpbGVQb3B1cCk7IFxyXG5wb3B1cFByb2ZpbGVWYWxpZGF0aW9uLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbmNvbnN0IHBvcHVwQXZhdGFyVmFsaWRhdGlvbiA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25Db25maWcsIGF2YXRhclBvcHVwKTtcclxucG9wdXBBdmF0YXJWYWxpZGF0aW9uLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbmNvbnN0IHBvcHVwQWRkQ2FyZFZhbGlkYXRpb24gPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uQ29uZmlnLCBuZXdDYXJkUG9wdXApOyBcclxucG9wdXBBZGRDYXJkVmFsaWRhdGlvbi5lbmFibGVWYWxpZGF0aW9uKCk7XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcclxuICBjb25zb2xlLmxvZyhlLnRhcmdldCk7XHJcbn0pO1xyXG4iXSwibmFtZXMiOlsidmFsaWRhdGlvbkNvbmZpZyIsImZvcm1TZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiYnV0dG9uUHJvZmlsZVBvcHVwT3BlbiIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJidXR0b25BdmF0YXJQb3B1cE9wZW4iLCJxdWVyeVNlbGVjdG9yIiwiYnV0dG9uQWRkQ2FyZFBvcHVwT3BlbiIsIm5hbWVJbnB1dCIsImRlc2NyaXB0aW9uSW5wdXQiLCJwcm9maWxlUG9wdXAiLCJhdmF0YXJQb3B1cCIsIm5ld0NhcmRQb3B1cCIsIkNhcmQiLCJ0ZW1wbGF0ZVNlbGVjdG9yIiwibmFtZSIsImxpbmsiLCJsaWtlcyIsIl9pZCIsIm93bmVyIiwidXNlcklkIiwiaGFuZGxlQ2FyZENsaWNrIiwiZGVsZXRlQ2FyZCIsImxpa2VDYXJkSGFuZGxlciIsInRoaXMiLCJfbmFtZSIsIl9saW5rIiwiX2xpa2VzTGlzdCIsIl9jYXJkSWQiLCJfb3duZXJJZCIsIl9jdXJyZW50VXNlcklkIiwiX2hhbmRsZUNhcmRDbGljayIsIl9kZWxldGVDYXJkIiwiX2xpa2VDYXJkSGFuZGxlciIsIl90ZW1wbGF0ZVNlbGVjdG9yIiwiX2RlbGV0ZUJ1dHRvbiIsInJlbW92ZSIsImZpbmQiLCJfc2hvd0xpa2VzQW1vdW50IiwidGV4dENvbnRlbnQiLCJsZW5ndGgiLCJzZXRMaWtlcyIsIl9pc0NhcmRMaWtlZCIsIl9saWtlQnV0dG9uIiwiY2xhc3NMaXN0IiwiYWRkIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9lbGVtZW50IiwiX2dldFRlbXBsYXRlIiwiX2VsZW1lbnRJbWFnZSIsIl9lbGVtZW50VGl0bGUiLCJfbGlrZXNBbW91bnQiLCJzcmMiLCJhbHQiLCJfY2hlY2tDYXJkT3duZXIiLCJyZW5kZXJMaWtlcyIsIl9zZXRFdmVudExpc3RlbmVycyIsInRvZ2dsZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJGb3JtVmFsaWRhdG9yIiwiY2xhc3NlcyIsImZvcm1FbGVtZW50IiwiX2lucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsIl9mb3JtRWxlbWVudCIsIl9idXR0b25FbGVtZW50IiwiX2lucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnB1dEVsZW1lbnQiLCJlcnJvck1lc3NhZ2UiLCJlcnJvckVsZW1lbnQiLCJpZCIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsIl9zaG93SW5wdXRFcnJvciIsInNvbWUiLCJkaXNhYmxlZCIsIl9oYXNJbnZhbGlkSW5wdXQiLCJkaXNhYmxlU3VibWl0QnV0dG9uIiwiX2VuYWJsZVN1Ym1pdEJ1dHRvbiIsIl90b2dnbGVCdXR0b25TdGF0ZSIsImZvckVhY2giLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiU2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwicmVuZGVyZXIiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiaXRlbXMiLCJpdGVtIiwiZWxlbWVudCIsInByZXBlbmQiLCJVc2VySW5mbyIsIm5hbWVTZWxlY3RvciIsImRlc2NyaXB0aW9uU2VsZWN0b3IiLCJhdmF0YXJTZWxlY3RvciIsIl9kZXNjcmlwdGlvbiIsIl9hdmF0YXIiLCJkZXNjcmlwdGlvbiIsImF2YXRhciIsImFib3V0IiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwIiwiX2hhbmRsZUVzY0Nsb3NlIiwiYmluZCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJldnQiLCJrZXkiLCJjbG9zZSIsInRhcmdldCIsImN1cnJlbnRUYXJnZXQiLCJfcG9wdXBDbG9zZUJ1dHRvbiIsIl9oYW5kbGVPdmVybGF5Q2xvc2UiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX2Zvcm0iLCJfYnV0dG9uUG9wdXBTdWJtaXQiLCJfZm9ybUxpc3QiLCJpbnB1dCIsInZhbHVlIiwicHJldmVudERlZmF1bHQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJpc0xvYWRpbmciLCJyZXNldCIsIlBvcHVwV2l0aEltYWdlIiwiX2ltYWdlIiwiX2Rlc2NyaXB0aW9uSW1hZ2UiLCJBcGkiLCJiYXNlVXJsIiwiaGVhZGVycyIsIl9iYXNlVXJsIiwiX2hlYWRlcnMiLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiZmV0Y2giLCJtZXRob2QiLCJ0aGVuIiwiX2NoZWNrUmVzIiwiaW5mbyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiY2FyZERhdGEiLCJlbGVtZW50VGl0bGUiLCJlbGVtZW50TGluayIsIlBvcHVwV2l0aENvbmZpcm1hdGlvbiIsIl9wb3B1cEJ1dHRvbiIsImNhbGxiYWNrIiwiX2NvbmZpcm1EZWxldGVDYWxsYmFjayIsImFwaSIsImF1dGhvcml6YXRpb24iLCJwb3B1cEVkaXRQcm9maWxlIiwibG9hZGluZ1N0YXRlIiwiZWRpdFByb2ZpbGVJbmZvIiwidXNlclBhcmFtZXRlcnMiLCJzZXRVc2VySW5mbyIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImxvZyIsImZpbmFsbHkiLCJzZXRFdmVudExpc3RlbmVycyIsImF2YXRhckVkaXRQb3B1cCIsImVkaXRBdmF0YXIiLCJjbG9zZVBvcHVwIiwicG9wdXBBZGRDYXJkIiwiYWRkTmV3RWxlbWVudENhcmQiLCJjYXJkTGlzdCIsImFkZEl0ZW0iLCJjcmVhdGVDYXJkIiwicG9wdXBEZWxldGVDYXJkIiwicG9wdXBDYXJkIiwiY2FyZCIsImdldFVzZXJJZCIsIm9wZW4iLCJjYXJkSWQiLCJzZXRDb25maXJtQWN0aW9uIiwiZGVsZXRlRWxlbWVudENhcmQiLCJjYXJkRGVsZXRlIiwic3RhdGVMaWtlIiwiZ2V0TGlrZXMiLCJyZW1vdmVMaWtlIiwiZ2V0SWQiLCJzZXRMaWtlIiwiZ2VuZXJhdGVDYXJkIiwiaW5pdGlhbENhcmRzIiwiYWxsIiwiZ2V0VXNlckluZm8iLCJnZXRJbml0aWFsQ2FyZHMiLCJ1c2VyRGF0YSIsImNhcmRzIiwicmVuZGVySXRlbXMiLCJwcm9maWxlRm9ybSIsInBvcHVwUHJvZmlsZVZhbGlkYXRpb24iLCJyZXNldEVycm9ycyIsInBvcHVwQXZhdGFyVmFsaWRhdGlvbiIsInBvcHVwQWRkQ2FyZFZhbGlkYXRpb24iLCJlbmFibGVWYWxpZGF0aW9uIiwiZSJdLCJzb3VyY2VSb290IjoiIn0=